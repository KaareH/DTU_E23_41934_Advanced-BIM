=========================
A5 - Project Reflection
=========================



Learning experience
--------------------------------------------

This series of assignments, has brought me multiple learning experiences. I have gained a greater proficiency in
both BIM-specific skills, but also more general skills that are also useful outside the BIM-domain.


Importance of keeping structure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

During `assingment 2 <https://github.com/KaareH/DTU_E23_41934_Advanced-BIM/tree/main/Assignments/A2>`_, and a
great deal of :doc:`assingment 3 <A3>`, I mostly wrote the code in huge Jupyter notebooks
filled with various experiements and garbage code. This made it very difficult to keep track of what I had
to do, and which code was be used. To some extend, I would later copy some code into `.py` files if I deemed
it to be kept. However, this was not a good way to work, and I would often end lost in a big pile of code.

Later during :doc:`assingment 3 <A3>`, I started to use a more structured approach, and attempted to write most of the code
in the `PyConBIM` package modules from the beginning. This made it much easier to keep track of what I had
done, and what I had to do. It also made it easier to reuse code, and to keep the code clean and readable.

Another issue, was the relatively long/processing time of the large LLYN IFC model, which hindered my workflow.
This was one of the reasons, I initially worked in Jupyter notebooks, to keep the processed model in memory
during development. Again, this made it difficult to keep track of variables, and the order of which code had
been executed. The large model would also be overwhelming to visually inspect, and difficult to get a good overview.

As I moved away from the Jupyter notebooked oriented workflow, I made a small dummy IFC-model, which had just the
right amount of complexity to test the code, whilst still being small. This vastly improved my workflow.
Though not many, I also made a few automated unit tests, which would help notify, if I broke something.

Finally, I also made greater use of type hints and doc-strings, which helped me keep track of my own code.

OpenCascade
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Being a C++ library, OpenCascade is not the most pythonic library to work with, and had a bit of a learning curve.
However, it is a powerful library, and necesarry for what I wanted to do. Its capability to easily create oriented
bounding boxes (OBB), perform intersections and boolean operations, eased the development of my tool.

Don't trust your data (blindly)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With reference to :ref:`notebooks/A4-Tutorial:False axis`, it's evident that one should not blindly trust their data.
Of course, *garbage in, garbage out* applies, but I think it's important to perform as many tests as possible and
use cross validation, to minimize the risk of errors.

IFC
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Apart from gaining a greather proficiency in developing with `IfcOpenShell <https://ifcopenshell.org/>`_, I got more
experience with the IFC-schema. Namely but not limited to :code:`IfcStructuralItem` (and its subclasses), :code:`IfcRelConnectsStructuralMember`,
:code:`IfcTopologicalRepresentationItem` and :code:`IfcTopologyRepresentation`.

Flexibility/possibilities of FEM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

It proved difficult to reliably and consistently create analytical joints for structural members - especially for
joints that include multiple columns and beams, with center-axes not aligned nor parallel. For these cases, I had
the idea of creating the joints with intermediate "virtual" members, which greatly simplified the implementation.

In `another course <https://kurser.dtu.dk/course/41958>`_ I spoke to the professor about this method. He told me
that although not perfect, this method was certainly a valid approach for the described use case.



Process of developing the tutorial
--------------------------------------------

* Did the process of the course enable you to answer or define questions that you might need later for thesis?
* Would you have preferred to have been given less choice in the use cases?
* Was the number of tools for the course ok - should we have more or less? - if so which ones would you leave out?



Recieved feedback on the tutorial
--------------------------------------------

The project generally received positive feedback. One thing that was pointed out though, was that they could
have wished for a simpler overview of the tool, and what exactly it did. On the other hand, as they said themselves,
they did not posses much knowledge within structural analysis, and therefore it was not straight forward to easily
understand the tool.


My future for Advanced use of OpenBIM
--------------------------------------------

I will very much likely continue to use OpenBIM in the future. Both for my future professsional life, but certainly
also my bachelor's thesis as well as my master's thesis.

I think that it's exciting to work on the development of tools that can help automate and improve the workflow of
design, calculations and documentation. I'm also generally glad for open source software, and I think it's important
to transition to open standards - especially in a governmental context.


Wrap up
-------------------------

Despite my tool not having all the functionality I initially had pictured, I still think the project turned out well.
If only I have had more time, I could probably have fully implemented the tool as described in :ref:`A3:Focused/implemented IDM`.
As often being the case, it's easy to understimate the actual time it takes to implement something.

Yet, I'm still happy with the result, and I think I have learned a lot during the process. Beside BIM-specific skills, I have
also gained more experience with OpenCascade, Sphinx, Github actions and more. It's likely that I will continue to work on
this tool, and hopefully I will be able to implement the missing functionality for a coherent tool.


* conclude the journey through A1-A5

